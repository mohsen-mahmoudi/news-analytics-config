server:
  port: 8182
  servlet:
    context-path: /elastic-query

spring:
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8189/auth/realms/microservices_realm
          jwk-set-uri: http://localhost:8189/auth/realms/microservices_realm/protocol/openid-connect/certs
          audience: elastic-query-service
      client:
        registration:
          keycloak:
            client-id: 'elastic-query-service'
            client-secret: '8e7670ea-04f4-4e41-8738-8d114e1e67c2'
            authorization-grant-type: client_credentials
        provider:
          keycloak:
            issuer-uri: http://localhost:8189/auth/realms/microservices_realm
            token-uri: http://localhost:8189/auth/realms/microservices_realm/protocol/openid-connect/token

  jpa:
    open-in-view: false
    show-sql: true
    hibernate:
      ddl-auto: none # Important when using schema.sql
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    properties:
      hibernate:
        default_schema: public

  datasource:
    url: jdbc:postgresql://localhost:5432/postgres?currentSchema=public&binaryTransform=true&reWriteBatchInserts=true
    username: admin
    password: 123
    driver-class-name: org.postgresql.Driver

  sql:
    init:
      schema-locations: classpath:init-schema.sql
      data-locations: classpath:init-data.sql
      mode: always

elastic-config:
  index-name: news-index
  connection-url: http://localhost:9200
  connection-timeout-ms: 5000
  socket-timeout-ms: 30000
  is-repository: true

elastic-query-config:
  field: text

elastic-query-service-config:
  custom-audience: elastic-query-service
  webclient:
    connection-timeout-ms: 10000
    read-timeout-ms: 30000
    write-timeout-ms: 30000
    max-in-memory-size: 10MB
    #query-type: 'KAFKA_STATE_STORE'
    query-type: 'ANALYTICS_DATABASE'
  query-from-kafka-state-store:
    method: GET
    url: "http://kafka-streams-service/kafka-streams/get-word-count-by-word/{word}"
  query-from-analytics-database:
    method: GET
    url: "http://analytics-service/analytics/get-word-count-by-word/{word}"

user-config:
    username: user
    password: password
    roles: USER

springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html

security:
  path-to-ignore: /api-docs/**